// Nice Rhythm
// Fluid vertical rhythm with modular scale. Mobile first.
//
// @cinan
// https://github.com/cinan/gridism

niceRhythm(
_scaleFactor = 1.333,
_scaleFactorLarge = 1.618, // golden ratio
_baseFontSize = .85rem,
_baseFontSizeLarge = 1rem,
_baseLineHeight = _baseFontSize * 1.25,
_baseLineHeightLarge = _baseFontSizeLarge * 1.25,
_minViewportWidth = 35.5rem,
_maxViewportWidth = 60rem,
_lineHeights = null,
_fontScales = null
)

  define('scaleFactor', _scaleFactor, true)
  define('scaleFactorLarge', _scaleFactorLarge, true)
  define('baseFontSize', _baseFontSize, true)
  define('baseFontSizeLarge', _baseFontSizeLarge, true)
  define('baseLineHeight', _baseLineHeight, true)
  define('baseLineHeightLarge', _baseLineHeightLarge, true)
  define('minViewportWidth', _minViewportWidth, true)
  define('maxViewportWidth', _maxViewportWidth, true)
  define('lineHeights', _lineHeights || {
    'default': {
      '0': baseLineHeight * 1,
      '1': baseLineHeight * 1.5,
      '2': baseLineHeight * 2,
      '3': baseLineHeight * 2.5
    },
    'large': {
      '0': baseLineHeightLarge * 1,
      '1': baseLineHeightLarge * 1.5,
      '2': baseLineHeightLarge * 2,
      '3': baseLineHeightLarge * 3
    }
  }, true)
  define('fontScales', _fontScales || {
    'default': {
      '0': baseFontSize * (scaleFactor ** 0),
      '1': baseFontSize * (scaleFactor ** 1),
      '2': baseFontSize * (scaleFactor ** 2),
      '3': baseFontSize * (scaleFactor ** 3)
    },
    'large': {
      '0': baseFontSizeLarge * (scaleFactorLarge ** 0),
      '1': baseFontSizeLarge * (scaleFactorLarge ** 0.5),
      '2': baseFontSizeLarge * (scaleFactorLarge ** 1.5),
      '3': baseFontSizeLarge * (scaleFactorLarge ** 2.5)
    }
  }, true)

_fontScale(scale = 0, defaultScale = true)
  fontScales[defaultScale ? 'default' : 'large']['%s' % scale]

_lineHeight(scale = 0, defaultScale = true)
  lineHeights[defaultScale ? 'default' : 'large']['%s' % scale]

_stripUnit(num)
  unit(num, '')

rhythm(scale = 0, ignoreFontSize = false, ignoreLineHeight = false, ignoreMargin = false)
  unless ignoreLineHeight
    customRhythm('line-height', scale, base: 'lineHeight')

  unless ignoreFontSize
    customRhythm('font-size', scale, base: 'fontSize')

  unless ignoreMargin
    customRhythm('margin-bottom', scale)

customRhythm(property = 'margin-bottom', scale = 0, multiple = 1, base = 'baseLineHeight')
  if base == 'lineHeight'
    heightMin = _lineHeight(scale) * multiple
    heightMax = _lineHeight(scale, false) * multiple
  else if base == 'fontSize'
    heightMin = _fontScale(scale) * multiple
    heightMax = _fontScale(scale, false) * multiple
  else
    heightMin = baseLineHeight * multiple
    heightMax = baseLineHeightLarge * multiple

  {property}: heightMin

  @media screen and (min-width: minViewportWidth)
    {property}: 'calc(%s + %s * ((100vw - %s) / %s))' % (heightMin (_stripUnit(heightMax) - _stripUnit(heightMin)) minViewportWidth (_stripUnit(maxViewportWidth) - _stripUnit(minViewportWidth)))

  @media screen and (min-width: maxViewportWidth)
    {property}: heightMax
